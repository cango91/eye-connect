<%- include('../partials/header') %>
<%- include('../partials/navigation') %>
<main class="container-lg mt-5 py-4 bg-light shadow-lg rounded">
  <div class="text-center">
    <h3><span class="float-start"><a class="btn btn-secondary" href="/portal/patients">&larr; Back</a></span>Patient Details</h3>
    <hr>
  </div>
  <h2>
    <div class="row">
      <div class="col">
        <span id="placeholder"><small>loading...</small></span><span id="patient-name"></span>&nbsp;<span id="patient-gender"></span> <span id="patient-age"></span>
      </div>
      <div class="col">
        <span class="float-end mx-1"><a href="#" id="edit-btn" class="btn btn-warning"><%- pencilIcon %></a></span><span class="float-end"><a href="/portal/patients/<%= patientId %>/exams/new" class="btn btn-primary" id="new-exam-btn"><%- paperIcon %></a></span>
      </div>
    </div>
  </h2>
  <div class="container-lg">
    <div class="row g-3">
      <div class="col-sm-6">
        <h5 class="fw-bold">Date of Birth:</h5>
        <h5><span id="dob" class="badge text-dark"></span></h5>
      </div>

    </div>
    <div class="row">
      <div class="col">
        <h4>Previous Exams</h4>
        <div id="dy-table" class="border p-3">
          <%- include('../partials/tableComponent', examsTable) %>
        </div>
      </div>
    </div>
  </div>
</main>
<script>
  const patientId = '<%= patientId  %>';
  const eyeIcon = '<%- eyeIcon %>';
  const pencilIcon = '<%- pencilIcon %>';
  const saveIcon = '<%- saveIcon %>';

  const editButton = document.getElementById('edit-btn');

  const nameElem = document.getElementById('patient-name');
  const genderElm = document.getElementById('patient-gender');
  const ageElm = document.getElementById('patient-age');
  const dobElem = document.getElementById('dob');

  const placeholder = document.getElementById('placeholder');

  let originalName, originalGender, originalDob;

  let isEditing = false;
  let patientData = null;

  const getPatientData = () => {
    fetch(`/portal/api/patients/${patientId}`)
      .then(response => response.json())
      .then(data => {
        patientData = data;
        placeholder.remove();
        nameElem.textContent = data.data.name;
        genderElm.textContent = `(${data.data.gender[0]}), `;
        ageElm.textContent = `${calculateAge(data.data.dateOfBirth)} years`;
        dobElem.textContent = getDate(data.data.dateOfBirth);
        tableArea.appendChild(placeholder);
        <% if(editMode){ %>
            toggleEditState();
        <% } %>
      });
  }


  const saveChanges = (e) => {
    if(e) e.preventDefault();
    const nameInput = nameElem.querySelector('input');
    const genderSelect = genderElm.querySelector('select');
    const dobInput = dobElem.querySelector('input');

    const params = new URLSearchParams();
    params.append('name', nameInput.value);
    params.append('gender', genderSelect.value);
    params.append('dateOfBirth', dobInput.value + 'T00:00');

    fetch(`/portal/api/patients/${patientId}?_method=put`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: params.toString()
      })
      .then(response => response.json())
      .then(data => {
        if (!data.error) {
          patientData = data;
          toggleEditState();
          ageElm.textContent = `${calculateAge(data.data.dateOfBirth)} years`;
        } else {
          console.error(data.error);
        }
      })
      .catch(error => {
        console.error(error);
      });
  }

  const toggleEditState = (e) => {
    if (e) e.preventDefault();
    if (!patientData) return;

    isEditing = !isEditing;
    if (isEditing) {
      nameElem.innerHTML = `<input type="text" value="${patientData.data.name}" class="form-control">`;
      genderElm.innerHTML = `<select class="form-select"><option value="Male"${patientData.data.gender === 'Male' ? ' selected' : ''}>Male</option><option value="Female"${patientData.data.gender === 'Female' ? ' selected' : ''}>Female</option></select>`;
      dobElem.innerHTML = `<input type="date" value="${new Date(patientData.data.dateOfBirth).toISOString().split('T')[0]}" class="form-control">`;
      ageElm.style.visibility = 'hidden';
      editButton.removeEventListener('click', toggleEditState);
      editButton.addEventListener('click', saveChanges);
      editButton.innerHTML = saveIcon;
      editButton.className = 'btn btn-success';
    } else {
      nameElem.textContent = patientData.data.name;
      genderElm.textContent = `(${patientData.data.gender[0]}), `;
      dobElem.textContent = getDate(patientData.data.dateOfBirth);
      ageElm.style.visibility = 'visible';
      editButton.removeEventListener('click', saveChanges);
      editButton.addEventListener('click', toggleEditState);
      editButton.innerHTML = pencilIcon;
      editButton.className = 'btn btn-warning';
    }
  }

  editButton.addEventListener('click', toggleEditState);

  const tableArea = document.getElementById('dy-table');
  window.addEventListener('tableLoaded', e => {
    handler = e.detail.handler;
    if (!handler.dataCount()) {
      placeholder.textContent = 'Patient has no previous exams';
    } else {
      placeholder.textContent = '';
    }
  });
  window.addEventListener('load', getPatientData);
</script>
<%- include('../partials/footer') %>